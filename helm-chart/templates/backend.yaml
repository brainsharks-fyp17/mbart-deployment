apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
data:
  MODEL_PATH: {{ .Values.backend.modelName }}
  MAX_LENGTH: {{ .Values.backend.maxLength }}
  NUM_BEAMS: {{ .Values.backend.numBeams }}
  TASK: {{ .Values.backend.task }}
  ENABLE_METRICS: 1
  REDIS_HOST: "redis-service"
  REDIS_PORT: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  labels:
    app: backend
spec:
  selector:
    matchLabels:
      app: backend
  replicas: {{ .Values.backend.replicas }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend-deployment
          image: rumeshms16/mabrt-simp:1.0.0
          imagePullPolicy: IfNotPresent
          env:
            - name: MODEL_PATH
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: MODEL_PATH
            - name: MAX_LENGTH
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: MAX_LENGTH
            - name: NUM_BEAMS
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: NUM_BEAMS
            - name: TASK
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: TASK
            - name: ENABLE_METRICS
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: ENABLE_METRICS
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: REDIS_HOST
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: REDIS_PORT
          ports:
            - containerPort: 8000
#          readinessProbe:
#            httpGet:
#              path: /ready
#              port: 5000
#          livenessProbe:
#            httpGet:
#              path: /health
#              port: 5000
#            initialDelaySeconds: 3
#            periodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  type: ClusterIP
  ports:
    - targetPort: 8000
      port: 8000
  selector:
    app: backend
